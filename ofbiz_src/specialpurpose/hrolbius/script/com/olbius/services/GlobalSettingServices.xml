<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">

<!-- Simple-methods for Recruitment Type Services -->	
<simple-method method-name="createRecruitmentType" short-description="Create Recruitment Type">
	<make-value value-field="newEntity" entity-name="RecruitmentType"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateRecruitmentType">
	<entity-one value-field="LookedUprecruitmentType" entity-name="RecruitmentType"></entity-one>
	<set-pk-fields value-field="LookedUprecruitmentType" map="parameters"/>
	<set-nonpk-fields value-field="LookedUprecruitmentType" map="parameters"/>
	<store-value value-field="LookedUprecruitmentType"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<!-- <simple-method method-name="deleteRecruitmentType">
	<entity-one value-field="LookedUprecruitmentType" entity-name="RecruitmentType"></entity-one>
	<remove-value value-field="LookedUprecruitmentType"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method> -->

<!-- Simple-methods for Recruitment Form Services -->	
<simple-method method-name="createRecruitmentForm" short-description="Create Recruitment Form">
	<make-value value-field="newEntity" entity-name="RecruitmentForm"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateRecruitmentForm">
	<entity-one value-field="LookedUprecruitmentForm" entity-name="RecruitmentForm"></entity-one>
	<set-pk-fields value-field="LookedUprecruitmentForm" map="parameters"/>
	<set-nonpk-fields value-field="LookedUprecruitmentForm" map="parameters"/>
	<store-value value-field="LookedUprecruitmentForm"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteRecruitmentForm">
	<entity-one value-field="LookedUprecruitmentForm" entity-name="RecruitmentForm"></entity-one>
	<remove-value value-field="LookedUprecruitmentForm"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>


<!-- Simple-methods for Recruitment Criteria Services -->	
<simple-method method-name="createRecruitmentCriteria" short-description="Create Recruitment Criteria">
	<make-value value-field="newEntity" entity-name="RecruitmentCriteria"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<if-not-empty field="parameters.emplPositionTypeId">
	    <make-value value-field="newEntityEPTR" entity-name="EmplPositionTypeCriteria"/>
	    <set-pk-fields value-field="newEntityEPTR" map="parameters"/>
	    <set-nonpk-fields value-field="newEntityEPTR" map="parameters"/>
	    <create-value value-field="newEntityEPTR"/>
	</if-not-empty>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateRecruitmentCriteria">
    <log message="abccc ${parameters}" level="info"/>
	<entity-one value-field="LookedUprecruitmentCriteria" entity-name="RecruitmentCriteria" auto-field-map="parameters"></entity-one>
	<set-pk-fields value-field="LookedUprecruitmentCriteria" map="parameters"/>
	<set-nonpk-fields value-field="LookedUprecruitmentCriteria" map="parameters"/>
	<store-value value-field="LookedUprecruitmentCriteria"/>
	<entity-one value-field="LookedUpEmplPositionTypeCriteria" entity-name="EmplPositionTypeCriteria" auto-field-map="parameters"></entity-one>
	<set-pk-fields value-field="LookedUpEmplPositionTypeCriteria" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpEmplPositionTypeCriteria" map="parameters"/>
	<store-value value-field="LookedUpEmplPositionTypeCriteria"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteRecruitmentCriteria">
    <entity-one value-field="LookedUpemplPositionTypeCriteria" entity-name="EmplPositionTypeCriteria" auto-field-map="parameters"></entity-one>
    <log message="abc22 ${LookedUpemplPositionTypeCriteria}" level="info"/>
	<remove-value value-field="LookedUpemplPositionTypeCriteria"/>
	<entity-one value-field="LookedUprecruitmentCriteria" entity-name="RecruitmentCriteria" auto-field-map="parameters" ></entity-one>
	 <log message="abc22 ${LookedUprecruitmentCriteria}" level="info"/>
	<remove-value value-field="LookedUprecruitmentCriteria"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>
<!-- Simple-methods for Training Form Services -->	
<simple-method method-name="createTrainingForm" short-description="Create Training Form">
	<make-value value-field="newEntity" entity-name="TrainingFormType"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateTrainingForm">
	<entity-one value-field="LookedUptrainingForm" entity-name="TrainingFormType"></entity-one>
	<set-pk-fields value-field="LookedUptrainingForm" map="parameters"/>
	<set-nonpk-fields value-field="LookedUptrainingForm" map="parameters"/>
	<store-value value-field="LookedUptrainingForm"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteTrainingForm">
	<entity-one value-field="LookedUptrainingForm" entity-name="TrainingFormType"></entity-one>
	<remove-value value-field="LookedUptrainingForm"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method><!-- Simple-methods for Training Type Services -->	
<simple-method method-name="createTrainingType" short-description="Create Training Type">
	<make-value value-field="newEntity" entity-name="TrainingType"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateTrainingType">
	<entity-one value-field="LookedUptrainingType" entity-name="TrainingType"></entity-one>
	<set-pk-fields value-field="LookedUptrainingType" map="parameters"/>
	<set-nonpk-fields value-field="LookedUptrainingType" map="parameters"/>
	<store-value value-field="LookedUptrainingType"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteTrainingType">
	<entity-one value-field="LookedUptrainingType" entity-name="TrainingType"></entity-one>
	<remove-value value-field="LookedUptrainingType"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>
<!-- Simple-methods for Type Propose Services -->	
<simple-method method-name="createTypePropose" short-description="Create Type Propose">
	<make-value value-field="newEntity" entity-name="TypePropose"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateTypePropose">
	<entity-one value-field="LookedUptypePropose" entity-name="TypePropose"></entity-one>
	<set-pk-fields value-field="LookedUptypePropose" map="parameters"/>
	<set-nonpk-fields value-field="LookedUptypePropose" map="parameters"/>
	<store-value value-field="LookedUptypePropose"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteTypePropose">
	<entity-one value-field="LookedUptypePropose" entity-name="TypePropose"></entity-one>
	<remove-value value-field="LookedUptypePropose"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for MaritalStatus Services -->	
<simple-method method-name="createMaritalStatus" short-description="Create MaritalStatus">
	<make-value value-field="newEntity" entity-name="MaritalStatus"/>
	<entity-condition list="listIdExist" entity-name="MaritalStatus">
        <condition-expr field-name="maritalStatusId" from-field="parameters.maritalStatusId"/>
    </entity-condition>
    <if-not-empty field="listIdExist">
        <add-error>
        	<fail-property resource="NotificationUiLabels" property="IdExisted"/>
        </add-error>
	</if-not-empty>
	<check-errors/> 
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateMaritalStatus">
	<entity-one value-field="LookedUpMaritalStatus" entity-name="MaritalStatus"></entity-one>
	<set-pk-fields value-field="LookedUpMaritalStatus" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpMaritalStatus" map="parameters"/>
	<store-value value-field="LookedUpMaritalStatus"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteMaritalStatus">
	<entity-one value-field="LookedUpMaritalStatus" entity-name="MaritalStatus"></entity-one>
	<remove-value value-field="LookedUpMaritalStatus"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for FamilyBackground Services -->	
<simple-method method-name="createFamilyBackground" short-description="Create FamilyBackground">
	<make-value value-field="newEntity" entity-name="FamilyBackground"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateFamilyBackground">
	<entity-one value-field="LookedUpFamilyBackground" entity-name="FamilyBackground"></entity-one>
	<set-pk-fields value-field="LookedUpFamilyBackground" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpFamilyBackground" map="parameters"/>
	<store-value value-field="LookedUpFamilyBackground"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteFamilyBackground">
	<entity-one value-field="LookedUpFamilyBackground" entity-name="FamilyBackground"></entity-one>
	<remove-value value-field="LookedUpFamilyBackground"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for PersonalBackground Services -->	
<simple-method method-name="createPersonalBackground" short-description="Create PersonalBackground">
	<make-value value-field="newEntity" entity-name="PersonalBackground"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updatePersonalBackground">
	<entity-one value-field="LookedUpPersonalBackground" entity-name="PersonalBackground"></entity-one>
	<set-pk-fields value-field="LookedUpPersonalBackground" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpPersonalBackground" map="parameters"/>
	<store-value value-field="LookedUpPersonalBackground"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deletePersonalBackground">
	<entity-one value-field="LookedPersonalBackground" entity-name="PersonalBackground"></entity-one>
	<remove-value value-field="LookedPersonalBackground"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for EthnicOrigin Services -->	
<simple-method method-name="createEthnicOrigin" short-description="Create EthnicOrigin">
	<make-value value-field="newEntity" entity-name="EthnicOrigin"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateEthnicOrigin">
	<entity-one value-field="LookedUpEthnicOrigin" entity-name="EthnicOrigin"></entity-one>
	<set-pk-fields value-field="LookedUpEthnicOrigin" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpEthnicOrigin" map="parameters"/>
	<store-value value-field="LookedUpEthnicOrigin"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteEthnicOrigin">
	<entity-one value-field="LookedEthnicOrigin" entity-name="EthnicOrigin"></entity-one>
	<remove-value value-field="LookedEthnicOrigin"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for Religion Services -->	
<simple-method method-name="createReligion" short-description="Create Religion">
	<make-value value-field="newEntity" entity-name="Religion"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateReligion">
	<entity-one value-field="LookedUpReligion" entity-name="Religion"></entity-one>
	<set-pk-fields value-field="LookedUpReligion" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpReligion" map="parameters"/>
	<store-value value-field="LookedUpReligion"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteReligion">
	<entity-one value-field="LookedUpReligion" entity-name="Religion"></entity-one>
	<remove-value value-field="LookedUpReligion"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for Nationality Services -->	
<simple-method method-name="createNationality" short-description="Create Nationality">
	<make-value value-field="newEntity" entity-name="Nationality"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateNationality">
	<entity-one value-field="LookedUpNationality" entity-name="Nationality"></entity-one>
	<set-pk-fields value-field="LookedUpNationality" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpNationality" map="parameters"/>
	<store-value value-field="LookedUpNationality"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteNationality">
	<entity-one value-field="LookedNationality" entity-name="Nationality"></entity-one>
	<remove-value value-field="LookedNationality"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for TrainingLevel Services -->	
<simple-method method-name="createTrainingLevel" short-description="Create TrainingLevel">
	<make-value value-field="newEntity" entity-name="TrainingLevel"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateTrainingLevel">
	<entity-one value-field="LookedUpTrainingLevel" entity-name="TrainingLevel"></entity-one>
	<set-pk-fields value-field="LookedUpTrainingLevel" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpTrainingLevel" map="parameters"/>
	<store-value value-field="LookedUpTrainingLevel"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteTrainingLevel">
	<entity-one value-field="LookedUpTrainingLevel" entity-name="TrainingLevel"></entity-one>
	<remove-value value-field="LookedUpTrainingLevel"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for University Services -->	
<simple-method method-name="createUniversity" short-description="Create University">
	<make-value value-field="newEntity" entity-name="EducationSchool"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateUniversity">
	<entity-one value-field="LookedUpUniversity" entity-name="EducationSchool"></entity-one>
	<set-pk-fields value-field="LookedUpUniversity" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpUniversity" map="parameters"/>
	<store-value value-field="LookedUpUniversity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteUniversity">
	<entity-one value-field="LookedUpUniversity" entity-name="EducationSchool"></entity-one>
	<remove-value value-field="LookedUpUniversity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for Major Services -->	
<simple-method method-name="createMajor" short-description="Create Major">
	<make-value value-field="newEntity" entity-name="Major"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateMajor">
	<entity-one value-field="LookedUpMajor" entity-name="Major"></entity-one>
	<set-pk-fields value-field="LookedUpMajor" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpMajor" map="parameters"/>
	<store-value value-field="LookedUpMajor"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteMajor">
	<entity-one value-field="LookedUpMajor" entity-name="Major"></entity-one>
	<remove-value value-field="LookedUpMajor"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for Grade Services -->	
<simple-method method-name="createGrade" short-description="Create Grade">
	<make-value value-field="newEntity" entity-name="Grade"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateGrade">
	<entity-one value-field="LookedUpGrade" entity-name="Grade"></entity-one>
	<set-pk-fields value-field="LookedUpGrade" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpGrade" map="parameters"/>
	<store-value value-field="LookedUpGrade"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteGrade">
	<entity-one value-field="LookedUpGrade" entity-name="Grade"></entity-one>
	<remove-value value-field="LookedUpGrade"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for Occupation Services -->	
<simple-method method-name="createOccupation" short-description="Create Occupation">
	<make-value value-field="newEntity" entity-name="Occupation"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updateOccupation">
	<entity-one value-field="LookedUpOccupation" entity-name="Occupation"></entity-one>
	<set-pk-fields value-field="LookedUpOccupation" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpOccupation" map="parameters"/>
	<store-value value-field="LookedUpOccupation"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deleteOccupation">
	<entity-one value-field="LookedUpOccupation" entity-name="Occupation"></entity-one>
	<remove-value value-field="LookedUpOccupation"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<!-- Simple-methods for PunishmentType Services -->	
<simple-method method-name="createPunishmentType" short-description="Create PunishmentType">
	<make-value value-field="newEntity" entity-name="PunishmentType"/>
	<set-pk-fields value-field="newEntity" map="parameters"/>
	<set-nonpk-fields value-field="newEntity" map="parameters"/>
	<create-value value-field="newEntity"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="updatePunishmentType">
	<entity-one value-field="LookedUpPunishmentType" entity-name="PunishmentType"></entity-one>
	<set-pk-fields value-field="LookedUpPunishmentType" map="parameters"/>
	<set-nonpk-fields value-field="LookedUpPunishmentType" map="parameters"/>
	<store-value value-field="LookedUpPunishmentType"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
<simple-method method-name="deletePunishmentType">
	<entity-one value-field="LookedUpPunishmentType" entity-name="PunishmentType"></entity-one>
	<remove-value value-field="LookedUpPunishmentType"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<simple-method method-name="deleteTaxAuthorityRatePayroll" short-description="delete a record TaxAuthorityRatePayroll">
	<entity-one value-field="LookupTaxAuthorityRatePayroll" entity-name="TaxAuthorityRatePayroll"></entity-one>
	<remove-value value-field="LookupTaxAuthorityRatePayroll"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
	</call-bsh>
</simple-method>

<simple-method method-name="UpdateTaxAuthorityRatePayroll" >
	<entity-one value-field="LookUpValue" entity-name="TaxAuthorityRatePayroll"></entity-one>
	<set-pk-fields value-field="LookUpValue" map="parameters"/>
	<set-nonpk-fields value-field="LookUpValue" map="parameters"/>
	<store-value value-field="LookUpValue"/>
	<call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
	</call-bsh>
</simple-method>
	<!-- <simple-method method-name="createTaxAuthorityRatePayroll">
		<make-value value-field="newEntity" entity-name="TaxAuthorityRatePayroll"/>
		<sequenced-id sequence-name="TaxAuthorityRatePayroll" field="newEntity.taxAuthorityRateSeqId"/>
		<field-to-result field="newEntity.taxAuthorityRateSeqId" result-name="taxAuthorityRateSeqId"/>
		<set-nonpk-fields value-field="newEntity" map="parameters"/>
		<create-value value-field="newEntity"/>
		<call-bsh >
				import org.ofbiz.base.util.UtilProperties;
				import org.ofbiz.service.ServiceUtil;
				resourceNoti = "NotificationUiLabels";
				ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
		</call-bsh>
	</simple-method> -->
	<simple-method method-name="createTaxAuthorityRatePayroll">
		<make-value value-field="newEntity" entity-name="TaxAuthorityRatePayroll"/>
		<sequenced-id sequence-name="TaxAuthorityRatePayroll" field="newEntity.taxAuthorityRateSeqId"/>
		<field-to-result field="newEntity.taxAuthorityRateSeqId" result-name="taxAuthorityRateSeqId"/>
		<set-nonpk-fields value-field="newEntity" map="parameters"/>
		<create-value value-field="newEntity"/>
		<call-bsh >
				import org.ofbiz.base.util.UtilProperties;
				import org.ofbiz.service.ServiceUtil;
				resourceNoti = "NotificationUiLabels";
				ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
		</call-bsh>
	</simple-method>
	
	<simple-method method-name="createDeptPositionType">
		<make-value value-field="newEntity" entity-name="EmplPosition"/>
		<set-nonpk-fields value-field="newEntity" map="parameters"/>
		<set-pk-fields value-field="newEntity" map="parameters"/>
		<sequenced-id sequence-name="EmplPosition" field="newEntity.emplPositionId"/>
		<create-value value-field="newEntity"/>
		<call-bsh >
				import org.ofbiz.base.util.UtilProperties;
				import org.ofbiz.service.ServiceUtil;
				resourceNoti = "NotificationUiLabels";
				ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
		</call-bsh>
	</simple-method>
	
	<simple-method method-name="delDeptPositionType">
		<entity-one value-field="LookupDeptPositionType" entity-name="DeptPositionType"></entity-one>
		<remove-value value-field="LookupDeptPositionType"/>
		<call-bsh >
				import org.ofbiz.base.util.UtilProperties;
				import org.ofbiz.service.ServiceUtil;
				resourceNoti = "NotificationUiLabels";
				ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
		</call-bsh>
	</simple-method>
	
	<!-- HUNGNC START EDIT -->
	<simple-method method-name="updateInternalPurchaseLimit" short-description="Update InternalPurchaseLimit ">
        <entity-one entity-name="InternalPurchaseLimit" value-field="lookedUpValue"/>
        <set-nonpk-fields value-field="lookedUpValue" map="parameters"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    
    <!-- <simple-method method-name="createInternalPurchaseLimit" short-description="Create a InternalPurchaseLimit">
        <make-value entity-name="InternalPurchaseLimit" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.emplPositionTypeId">
            <sequenced-id sequence-name="InternalPurchaseLimit" field="newEntity.emplPositionTypeId"/>
        </if-empty>
        <field-to-result field="newEntity.emplPositionTypeId" result-name="emplPositionTypeId"/>
        <create-value value-field="newEntity"/>
        <call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import
			org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti,
			"createSuccessfully", locale));
		</call-bsh>
    </simple-method> -->
    
    <simple-method method-name="deleteInternalPurchaseLimit" short-description="Delete InternalPurchaseLimit">
        <entity-one entity-name="InternalPurchaseLimit" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
        <call-bsh>
			import org.ofbiz.base.util.UtilProperties;
			import
			org.ofbiz.service.ServiceUtil;
			resourceNoti = "NotificationUiLabels";
			<!-- ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti,
			"removeSuccessfully", locale)); -->
			ServiceUtil.returnSuccess(UtilProperties.getMessage("HrCommonUiLabels", 
			"deleteSuccessfully", locale));
		</call-bsh>
    </simple-method>
    <!-- HUNGNC END EDIT -->
	<simple-method method-name="updateHolidayTypes" short-description="update Holiday Types">
		<entity-one value-field="holidayType" entity-name="HolidayType"></entity-one>
		<set-nonpk-fields value-field="holidayType" map="parameters"/>
		<set-pk-fields value-field="holidayType" map="parameters"/>
		<store-value value-field="holidayType"/>
		<field-to-result field="holidayType.holidayTypeId" result-name="holidayTypeId" />
		<field-to-result field="holidayType.parentTypeId" result-name="parentTypeId" />
		<field-to-result field="holidayType.description" result-name="description" />
		<field-to-result field="holidayType.periodTypeId" result-name="periodTypeId" />
		<call-bsh >
				import org.ofbiz.base.util.UtilProperties;
				import org.ofbiz.service.ServiceUtil;
				resourceNoti = "HrCommonUiLabels";
				ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "updateSuccessfully", locale));			
		</call-bsh>
	</simple-method>
	
	<simple-method method-name="createHolidayTypes" short-description="create new holiday type">
		<make-value value-field="newEntity" entity-name="HolidayType"/>
		<set-nonpk-fields value-field="newEntity" map="parameters"/>
		<set-pk-fields value-field="newEntity" map="parameters"/>
		<if-empty field="newEntity.holidayTypeId">
			<sequenced-id sequence-name="HolidayType" field="newEntity.holidayTypeId"/>
		</if-empty>
		<create-value value-field="newEntity"/>
		<field-to-result field="newEntity.holidayTypeId" result-name="holidayTypeId" />
		<field-to-result field="newEntity.parentTypeId" result-name="parentTypeId" />
		<field-to-result field="newEntity.description" result-name="description" />
		<field-to-result field="newEntity.periodTypeId" result-name="periodTypeId" />
		<call-bsh >
				import org.ofbiz.base.util.UtilProperties;
				import org.ofbiz.service.ServiceUtil;
				resourceNoti = "NotificationUiLabels";
				ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "createSuccessfully", locale));			
		</call-bsh>
	</simple-method>
	
	<simple-method method-name="deleteHolidayTypes" short-description="delete holiday Type">
		<entity-one value-field="holidayType" entity-name="HolidayType"></entity-one>
		<remove-value value-field="holidayType"/>
		<call-bsh >
				import org.ofbiz.base.util.UtilProperties;
				import org.ofbiz.service.ServiceUtil;
				resourceNoti = "NotificationUiLabels";
				ServiceUtil.returnSuccess(UtilProperties.getMessage(resourceNoti, "deleteSuccessfully", locale));			
		</call-bsh>
	</simple-method>
</simple-methods>