<?xml version="1.0" encoding="UTF-8"?>
<service-eca xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/service-eca.xsd">
    <!-- order item status changes -->
<!-- 	<eca service="changeOrderItemStatus" event="commit"> -->
<!--         <condition field-name="statusId" operator="equals" value="ITEM_COMPLETED"/> -->
<!--         <action service="checkOrderItemAssocStatus" mode="sync"/> -->
<!--     </eca> -->
<!--     <eca service="changeOrderItemStatus" event="commit"> -->
<!--         <condition field-name="statusId" operator="equals" value="ITEM_REJECTED"/> -->
<!--         <action service="checkOrderItemAssocStatus" mode="sync"/> -->
<!--     </eca> -->
<!--     <eca service="changeOrderItemStatus" event="commit"> -->
<!--         <condition field-name="statusId" operator="equals" value="ITEM_CANCELLED"/> -->
<!--         <action service="checkOrderItemAssocStatus" mode="sync"/> -->
<!--     </eca> -->
    <eca service="getSalesCommissionAmountList" event="commit">
		<condition operator="is-not-empty" field-name="salesCommissionAmountList"/>
		<action mode="sync" service="logSalesCommissionData"/>
	</eca>
	<eca service="changeOrderItemStatusDis" event="commit">
        <condition field-name="statusId" operator="equals" value="ITEM_CANCELLED"/>
        <action service="cancelOrderInventoryReservationDis" mode="sync"/>
        <action service="cancleOrderItemGroupOrder" mode="sync"/>
        <action service="recalcShippingTotal" mode="sync"/>
        <action service="recalcTaxTotal" mode="sync"/>
        <action service="resetGrandTotal" mode="sync"/>
        <action service="checkOrderItemStatusDis" mode="sync"/>
    </eca>
    <eca service="changeOrderItemStatusDis" event="commit">
        <condition field-name="statusId" operator="equals" value="ITEM_COMPLETED"/>
        <action service="checkOrderItemStatusDis" mode="sync"/>
    </eca>
    <eca service="changeOrderItemStatusDis" event="commit">
        <condition field-name="statusId" operator="equals" value="ITEM_APPROVED"/>
        <action service="checkOrderItemStatusDis" mode="sync"/>
    </eca>
    <!-- <eca service="changeOrderItemStatusDis" event="commit">
        <condition field-name="statusId" operator="equals" value="ITEM_APPROVED"/>
        <action service="checkDigitalItemFulfillment" mode="sync"/>
    </eca> -->
    <!-- <eca service="changeOrderItemStatusDis" event="commit">
        <condition field-name="statusId" operator="equals" value="ITEM_APPROVED"/>
        <action service="invoiceServiceItems" mode="sync"/>
    </eca> -->
    
    <!-- create the accounting transactions for a sales shipment issuance every time the inventory is issued to the shipment -->
    <!-- <eca service="createItemIssuanceDis" event="commit">
        <condition field-name="orderId" operator="is-not-empty"/>
        <condition field-name="inventoryItemId" operator="is-not-empty"/>
        Ignore the inventory shipment if affectAccounting set as false
        <condition field-name="affectAccounting" operator="equals" value="true" type="Boolean"/>
        <action service="createAcctgTransForSalesShipmentIssuance" mode="sync"/>
    </eca> -->
    <!--create the accounting transactions when Fixed AssetMaint Issuance issues Inventory for fixed asset maintenance-->
    <!-- <eca service="createItemIssuanceDis" event="commit">
        <condition field-name="fixedAssetId" operator="is-not-empty"/>
        <action service="createAcctgTransForFixedAssetMaintIssuance" mode="sync"/>
    </eca> -->
    <!-- Requirement / stock level -->
    <eca service="createItemIssuanceDis" event="invoke">
        <condition field-name="quantity" value="0" operator="greater" type="BigDecimal"/>
        <action service="checkCreateStockRequirementQoh" mode="sync" run-as-user="system"/>
    </eca>
    <eca service="createItemIssuanceDis" event="return"><!-- change the owner after item issuance transactions are created for old owner -->
        <condition field-name="orderId" operator="is-not-empty"/>
        <condition field-name="inventoryItemId" operator="is-not-empty"/>
        <action service="changeOwnerUponIssuance" mode="sync"/>
    </eca>
    
    <!-- creating inventory item detail when unitCost is not empty and receiptId is empty -->
    <!-- <eca service="createInventoryItemDetail" event="commit">
        <condition field-name="unitCost" operator="is-not-empty"/>
        <condition field-name="receiptId" operator="is-empty"/>
        <action service="createAcctgTransForInventoryItemCostChange" mode="sync"/>
    </eca> -->
    
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="shipmentTypeId" operator="equals" value="SALES_SHIPMENT"/>
        <condition field-name="statusId" operator="equals" value="SHIPMENT_CANCELLED"/>
        <action service="checkCancelItemIssuanceAndOrderShipmentFromShipmentDis" mode="sync"/>
    </eca>
    <!-- if new statusId of a SALES_SHIPMENT is SHIPMENT_PICKED, create invoice -->
    <!-- <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="statusId" operator="equals" value="SHIPMENT_PICKED"/>
        <condition field-name="shipmentTypeId" operator="equals" value="SALES_SHIPMENT"/>
        <action service="createInvoicesFromShipment" mode="sync" run-as-user="system"/>
    </eca> -->
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="statusId" operator="equals" value="SHIPMENT_PACKED"/>
        <condition field-name="shipmentTypeId" operator="equals" value="SALES_SHIPMENT"/>
        <!-- <action service="createInvoicesFromShipment" mode="sync" run-as-user="system"/> -->
        <action service="setInvoicesToReadyFromShipment" mode="sync" run-as-user="system"/>
    </eca>
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="statusId" operator="equals" value="SHIPMENT_SHIPPED"/>
        <condition field-name="shipmentTypeId" operator="equals" value="SALES_SHIPMENT"/>
        <action service="sendShipmentCompleteNotification" mode="async" persist="true"/>
    </eca>
    <!-- if new statusId of a PURCHASE_SHIPMENT is PURCH_SHIP_RECEIVED, create invoice -->
    <!-- <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="statusId" operator="equals" value="PURCH_SHIP_RECEIVED"/>
        <condition field-name="shipmentTypeId" operator="equals" value="PURCHASE_SHIPMENT"/>
        <action service="balanceItemIssuancesForShipment" mode="sync"/>
        <action service="createInvoicesFromShipment" mode="sync" run-as-user="system"/>
    </eca> -->
    <!-- if new statusId of a DROP_SHIPMENT is PURCH_SHIP_SHIPPED, create purchase invoice -->
    <!-- <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="statusId" operator="equals" value="PURCH_SHIP_SHIPPED"/>
        <condition field-name="shipmentTypeId" operator="equals" value="DROP_SHIPMENT"/>
        <action service="createInvoicesFromShipment" mode="sync" run-as-user="system"/>
    </eca> -->
    <!-- if new statusId of a DROP_SHIPMENT is PURCH_SHIP_RECEIVED, create sales invoice -->
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="statusId" operator="equals" value="PURCH_SHIP_RECEIVED"/>
        <condition field-name="shipmentTypeId" operator="equals" value="DROP_SHIPMENT"/>
        <action service="createSalesInvoicesFromDropShipment" mode="sync" run-as-user="system"/>
    </eca>
    <!-- if new statusId of a SALES_RETURN is PURCH_SHIP_RECEIVED, create a return invoice.
         Note that PURCH_SHIP_RECEIVED now means any received shipment. We determine the
         type of shipment by the shipmentTypeId. -->
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="statusId" operator="equals" value="PURCH_SHIP_RECEIVED"/>
        <condition field-name="shipmentTypeId" operator="equals" value="SALES_RETURN"/>
        <action service="createInvoicesFromReturnShipment" mode="sync" run-as-user="system"/>
    </eca>
    <!-- if new status of a PURCHASE_RETURN is SHIPMENT_SHIPPED, create a return invoice -->
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="statusId" operator="equals" value="SHIPMENT_SHIPPED"/>
        <condition field-name="shipmentTypeId" operator="equals" value="PURCHASE_RETURN"/>
        <action service="createInvoicesFromReturnShipment" mode="sync" run-as-user="system"/>
    </eca>
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <condition field-name="statusId" operator="equals" value="SHIPMENT_SCHEDULED"/>
        <action service="sendShipmentScheduledNotification" mode="async"/>
    </eca>
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="originFacilityId" operator="not-equals" to-field-name="oldOriginFacilityId"/>
        <condition field-name="originFacilityId" operator="is-not-empty"/>
        <action service="setShipmentSettingsFromFacilities" mode="sync"/>
    </eca>
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="destinationFacilityId" operator="not-equals" to-field-name="oldDestinationFacilityId"/>
        <condition field-name="destinationFacilityId" operator="is-not-empty"/>
        <action service="setShipmentSettingsFromFacilities" mode="sync"/>
    </eca>
    <eca service="updateShipmentDis" event="commit">
        <condition-field field-name="primaryOrderId" operator="not-equals" to-field-name="oldPrimaryOrderId"/>
        <condition field-name="primaryOrderId" operator="is-not-empty"/>
        <action service="setShipmentSettingsFromPrimaryOrder" mode="sync"/>
    </eca>
    <eca service="reserveOrderItemInventoryDis" event="commit">
        <condition field-name="quantity" value="0" operator="greater" type="BigDecimal"/>
        <action service="checkCreateStockRequirementAtpDis" mode="sync" run-as-user="system"/>
    </eca>
    <eca service="updateItemIssuanceDis" event="invoke">
        <condition field-name="quantity" value="0" operator="greater" type="BigDecimal"/>
        <action service="checkCreateStockRequirementQohDis" mode="sync" run-as-user="system"/>
    </eca>
    
    <!-- order status changes -->
    <eca service="changeOrderStatusDis" event="commit" run-on-error="false">
        <condition field-name="statusId" operator="equals" value="ORDER_CANCELLED"/>
        <action service="releaseOrderPayments" mode="sync"/>
        <action service="processRefundReturnForReplacement" mode="sync"/>
    </eca>
    <eca service="changeOrderStatusDis" event="global-commit" run-on-error="false">
        <condition field-name="statusId" operator="equals" value="ORDER_COMPLETED"/>
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <action service="createInvoiceFromOrder" mode="sync"/>
        <action service="resetGrandTotal" mode="sync"/>
        <action service="sendOrderCompleteNotification" mode="async" persist="true"/>
        <action service="createReturnItemForRental" mode="sync"/>
    </eca>
    <!-- create payment from purchase order when approved (can be disabled by accountingConfig)-->
    <eca service="changeOrderStatusDis" event="commit" run-on-error="false">
        <condition field-name="orderTypeId" operator="equals" value="PURCHASE_ORDER"/>
        <condition field-name="statusId" operator="equals" value="ORDER_APPROVED"/>
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <!-- <action service="createPaymentFromOrder" mode="sync" persist="true"/> -->
        <action service="updateProductPlanItem" mode="sync" persist="true"/>
    </eca>
    <eca service="changeOrderStatusDis" event="commit" run-on-error="false">
        <condition field-name="orderTypeId" operator="equals" value="PURCHASE_ORDER"/>
        <condition field-name="statusId" operator="equals" value="ORDER_CANCELLED"/>
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <action service="updateProductPlanItem" mode="sync" persist="true"/>
    </eca>
    <!-- create payment from sales order when completed and not created yet (can be disabled by accountingConfig) -->
    <!-- <eca service="changeOrderStatusDis" event="commit" run-on-error="false">
        <condition field-name="orderTypeId" operator="equals" value="SALES_ORDER"/>
        <condition field-name="statusId" operator="equals" value="ORDER_COMPLETED"/>
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <action service="createPaymentFromOrder" mode="sync" persist="true"/>
    </eca> -->
    <!-- DISABLED FOR NOW
    <eca service="changeOrderStatusDis" event="commit" run-on-error="false">
        <condition field-name="statusId" operator="equals" value="ORDER_PROCESSING"/>
        <action service="processOrderWf" mode="async" persist="true"/>
    </eca>
    -->
    <!-- This ECA is for content usage subscriptions -->
    <eca service="changeOrderStatusDis" event="commit" run-on-error="false">
        <condition field-name="statusId" operator="equals" value="ORDER_APPROVED"/>
        <condition field-name="orderTypeId" operator="equals" value="SALES_ORDER"/>
        <condition-field field-name="statusId" operator="not-equals" to-field-name="oldStatusId"/>
        <action service="updateContentSubscriptionByOrder" mode="sync"/>
        <action service="processExtendSubscriptionByOrder" mode="sync"/>
    </eca>
    <!-- create the automatic and ATP requirements for sales orders but only if the status changes from created to approved -->
    <eca service="changeOrderStatusDis" event="commit" run-on-error="false">
        <condition field-name="oldStatusId" operator="equals" value="ORDER_CREATED"/>
        <condition field-name="statusId" operator="equals" value="ORDER_APPROVED"/>
        <condition field-name="orderTypeId" operator="equals" value="SALES_ORDER"/>
        <action service="createAutoRequirementsForOrder" mode="sync"/>
        <action service="createATPRequirementsForOrder" mode="sync"/>
    </eca>
    <eca service="createAccReportTarget" event="invoke">
    	<action mode="sync" service="createAccReport" result-to-context="true"/>
    </eca>
   <!--  <eca service="removeAccReportTarget" event="commit">
    	<action mode="sync" service="removeAccReport"/>
    </eca> -->
</service-eca>