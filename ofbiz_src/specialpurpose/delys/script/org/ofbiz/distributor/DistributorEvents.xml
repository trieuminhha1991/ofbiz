<?xml version="1.0" encoding="UTF-8"?>

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">
	<simple-method method-name="createFacilityPostalAddress" short-description="Create a PostalAddress for facility">
        <if-empty field="parameters.address1">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAAddressMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <if-empty field="parameters.city">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DACityMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <check-errors/>
        
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        <set field="importCtx.fromDate" from-field="parameters.fromDate"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        <set field="importCtx.extension" from-field="parameters.extension"/>
        <set field="importCtx.comments" from-field="parameters.comments"/>
        <set field="importCtx.toName" from-field="parameters.toName"/>
        <set field="importCtx.attnName" from-field="parameters.attnName"/>
        <set field="importCtx.address1" from-field="parameters.address1"/>
        <set field="importCtx.address2" from-field="parameters.address2"/>
        <set field="importCtx.directions" from-field="parameters.directions"/>
        <set field="importCtx.city" from-field="parameters.city"/>
        <set field="importCtx.postalCode" from-field="parameters.postalCode"/>
        <set field="importCtx.postalCodeExt" from-field="parameters.postalCodeExt"/>
        <set field="importCtx.countryGeoId" from-field="parameters.countryGeoId"/>
        <set field="importCtx.stateProvinceGeoId" from-field="parameters.stateProvinceGeoId"/>
        <set field="importCtx.countyGeoId" from-field="parameters.countyGeoId"/>
        <set field="importCtx.postalCodeGeoId" from-field="parameters.postalCodeGeoId"/>
        <set field="importCtx.geoPointId" from-field="parameters.geoPointId"/>
        <set field="importCtx.paymentMethodId" from-field="parameters.paymentMethodId"/>
        <set field="importCtx.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId"/>
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        
        <!-- OUT contactMechId -->
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <session-to-field field="importCtx.userLogin" session-name="userLogin"/>
        <call-service service-name="createFacilityPostalAddress" in-map-name="importCtx">
        	<result-to-field result-name="contactMechId" field="contactMechId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="contactMechId">
        	<set field="parameters.contactMechId" from-field="contactMechId"/>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="createFacilityContactMechPurpose" short-description="Create a facility/contact mech purpose">	
    	<if-empty field="parameters.facilityId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAFacilityIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <if-empty field="parameters.contactMechId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAContactMechIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <if-empty field="parameters.contactMechPurposeTypeId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAContactMechPurposeTypeIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <check-errors/>
        
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        <set field="importCtx.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        
        <!-- OUT fromDate -->
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <call-service service-name="createFacilityContactMechPurpose" in-map-name="importCtx">
        	<result-to-field result-name="fromDate" field="fromDate"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="fromDate">
        	<field-to-request field="fromDate" request-name="fromDate"/>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="updateFacilityPostalAddress" short-description="Update a PostalAddress for facility">
        <if-empty field="parameters.contactMechId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAContactMechIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <if-empty field="parameters.city">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DACityMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <check-errors/>
        
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        <set field="importCtx.fromDate" from-field="parameters.fromDate"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        <set field="importCtx.extension" from-field="parameters.extension"/>
        <set field="importCtx.comments" from-field="parameters.comments"/>
        <set field="importCtx.toName" from-field="parameters.toName"/>
        <set field="importCtx.attnName" from-field="parameters.attnName"/>
        <set field="importCtx.address1" from-field="parameters.address1"/>
        <set field="importCtx.address2" from-field="parameters.address2"/>
        <set field="importCtx.directions" from-field="parameters.directions"/>
        <set field="importCtx.city" from-field="parameters.city"/>
        <set field="importCtx.postalCode" from-field="parameters.postalCode"/>
        <set field="importCtx.postalCodeExt" from-field="parameters.postalCodeExt"/>
        <set field="importCtx.countryGeoId" from-field="parameters.countryGeoId"/>
        <set field="importCtx.stateProvinceGeoId" from-field="parameters.stateProvinceGeoId"/>
        <set field="importCtx.countyGeoId" from-field="parameters.countyGeoId"/>
        <set field="importCtx.postalCodeGeoId" from-field="parameters.postalCodeGeoId"/>
        <set field="importCtx.geoPointId" from-field="parameters.geoPointId"/>
        <set field="importCtx.paymentMethodId" from-field="parameters.paymentMethodId"/>
        <set field="importCtx.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId"/>
        <set field="importCtx.directions" from-field="parameters.directions"/>
        
        <!-- OUT contactMechId -->
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <call-service service-name="updateFacilityPostalAddress" in-map-name="importCtx">
        	<result-to-field result-name="contactMechId" field="contactMechId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="contactMechId">
        	<field-to-request field="contactMechId" request-name="contactMechId"/>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="deleteFacilityContactMechPurpose" short-description="Delete a facility/contact mech purpose">	
    	<if-empty field="parameters.facilityId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAFacilityIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <if-empty field="parameters.contactMechId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAContactMechIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <if-empty field="parameters.contactMechPurposeTypeId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAContactMechPurposeTypeIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <if-empty field="parameters.fromDate">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAFromDateMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <check-errors/>
        
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        <set field="importCtx.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId"/>
        <set field="importCtx.fromDate" from-field="parameters.fromDate" type="Timestamp"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <call-service service-name="deleteFacilityContactMechPurpose" in-map-name="importCtx"></call-service>
        <check-errors/>
    </simple-method>
    
    <simple-method method-name="deleteFacilityContactMech" short-description="Delete a FacilityContactMech">
        <if-empty field="parameters.facilityId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAFacilityIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <if-empty field="parameters.contactMechId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAContactMechIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <check-errors/>
        
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <call-service service-name="deleteFacilityContactMech" in-map-name="importCtx"></call-service>
        <check-errors/>
    </simple-method>
    
    <!-- <simple-method method-name="createFacilityContactMech" short-description="Create a FacilityContactMech">
        <set field="importCtx.contactMechTypeId" from-field="parameters.contactMechTypeId"/>
        <set field="importCtx.infoString" from-field="parameters.infoString"/>
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        <set field="importCtx.fromDate" from-field="parameters.fromDate"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        <set field="importCtx.extension" from-field="parameters.extension"/>
        <set field="importCtx.comments" from-field="parameters.comments"/>
        
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <call-service service-name="createFacilityContactMech" in-map-name="importCtx">
        	<result-to-field result-name="contactMechId" field="contactMechId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="contactMechId">
        	<field-to-request field="contactMechId" request-name="contactMechId"/>
        </if-not-empty>
    </simple-method> -->
    
    <simple-method method-name="createFacilityContactMech" short-description="Create a FacilityContactMech">
    	<if-empty field="parameters.contactMechId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAContactMechIdMustNotBeEmpty"/>
        	</add-error>
<!-- 			<sequenced-id sequence-name="ContactMech" field="contactMechId" /> -->
<!-- 			<set field="parameters.contactMechId" from-field="contactMechId"/> -->
        </if-empty>
<!--         <log message="cccc ${parameters.newContactMechId" level="info"/> -->
        <if-empty field="parameters.contactMechTypeId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAContactMechTypeIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <check-errors/>
		<log message="sssss ${parameters.infoString}" level="info"/>
		<set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        <set field="importCtx.contactMechTypeId" from-field="parameters.contactMechTypeId"/>
        <set field="importCtx.infoString" from-field="parameters.infoString"/>
        <set field="importCtx.newContactMechId" from-field="parameters.newContactMechId"/>
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.fromDate" from-field="parameters.fromDate"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        <set field="importCtx.extension" from-field="parameters.extension"/>
        <set field="importCtx.comments" from-field="parameters.comments"/>
        
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
<!--         <if-empty field="parameters.contactMechId"> -->
<!--             <call-service service-name="createFacilityContactMech" in-map-name="importCtx"> -->
<!-- 	        	<result-to-field result-name="contactMechId" field="contactMechId"/> -->
<!-- 	        	<result-to-field result-name="contactMechTypeId" field="contactMechTypeId"/> -->
<!-- 	        </call-service> -->
<!--             <else> -->
<!--                 <call-service service-name="updateFacilityContactMech" in-map-name="importCtx"> -->
<!-- 		        	<result-to-field result-name="contactMechId" field="contactMechId"/> -->
<!-- 		        </call-service> -->
<!--             </else> -->
<!--         </if-empty> -->
        <!-- Out: contactMechId -->
        <call-service service-name="createFacilityContactMech" in-map-name="importCtx">
        	<result-to-field result-name="contactMechId" field="contactMechId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="contactMechId">
        	<field-to-request field="contactMechId" request-name="contactMechId"/>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="createFacilityTelecomNumber" short-description="Create a Telecommunications Number">
        <set field="importCtx.contactMechTypeId" from-field="parameters.contactMechTypeId"/>
        <set field="importCtx.infoString" from-field="parameters.infoString"/>
        <set field="importCtx.newContactMechId" from-field="parameters.newContactMechId"/>
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.fromDate" from-field="parameters.fromDate"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        <set field="importCtx.extension" from-field="parameters.extension"/>
        <set field="importCtx.comments" from-field="parameters.comments"/>
        <set field="importCtx.countryCode" from-field="parameters.countryCode"/>
        <set field="importCtx.areaCode" from-field="parameters.areaCode"/>
        <set field="importCtx.contactNumber" from-field="parameters.contactNumber"/>
        <set field="importCtx.askForName" from-field="parameters.askForName"/>
        <set field="importCtx.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId"/>
        
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <!-- Out: contactMechId -->
        <call-service service-name="createFacilityTelecomNumber" in-map-name="importCtx">
        	<result-to-field result-name="contactMechId" field="contactMechId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="contactMechId">
        	<field-to-request field="contactMechId" request-name="contactMechId"/>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="updateFacilityTelecomNumber" short-description="Update a Telecommunications Number">
    	<if-empty field="parameters.contactMechId">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAContactMechIdMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <check-errors/>
    	
    	<set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        <set field="importCtx.contactMechTypeId" from-field="parameters.contactMechTypeId"/>
        <set field="importCtx.infoString" from-field="parameters.infoString"/>
        <set field="importCtx.newContactMechId" from-field="parameters.newContactMechId"/>
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.fromDate" from-field="parameters.fromDate"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        <set field="importCtx.extension" from-field="parameters.extension"/>
        <set field="importCtx.comments" from-field="parameters.comments"/>
        <set field="importCtx.countryCode" from-field="parameters.countryCode"/>
        <set field="importCtx.areaCode" from-field="parameters.areaCode"/>
        <set field="importCtx.contactNumber" from-field="parameters.contactNumber"/>
        <set field="importCtx.askForName" from-field="parameters.askForName"/>
        <set field="importCtx.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId"/>
        
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <!-- Out: contactMechId -->
        <call-service service-name="updateFacilityTelecomNumber" in-map-name="importCtx">
        	<result-to-field result-name="contactMechId" field="contactMechId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="contactMechId">
        	<field-to-request field="contactMechId" request-name="contactMechId"/>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="createFacilityEmailAddress" short-description="Create an Email Address">
    	<if-empty field="parameters.emailAddress">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAEmailAddressMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <check-errors/>
    	
    	<set field="importCtx.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId"/>
    	<set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        <set field="importCtx.contactMechTypeId" from-field="parameters.contactMechTypeId"/>
        <set field="importCtx.infoString" from-field="parameters.infoString"/>
        <set field="importCtx.newContactMechId" from-field="parameters.newContactMechId"/>
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.fromDate" from-field="parameters.fromDate"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        <set field="importCtx.extension" from-field="parameters.extension"/>
        <set field="importCtx.comments" from-field="parameters.comments"/>
        <set field="importCtx.emailAddress" from-field="parameters.emailAddress"/>
        
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <!-- Out: contactMechId -->
        <call-service service-name="createFacilityEmailAddress" in-map-name="importCtx">
        	<result-to-field result-name="contactMechId" field="contactMechId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="contactMechId">
        	<field-to-request field="contactMechId" request-name="contactMechId"/>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="updateFacilityEmailAddress" short-description="Create an Email Address">
    	<if-empty field="parameters.emailAddress">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAEmailAddressMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <check-errors/>
    	
    	<set field="importCtx.contactMechPurposeTypeId" from-field="parameters.contactMechPurposeTypeId"/>
    	<set field="importCtx.contactMechId" from-field="parameters.contactMechId"/>
        <set field="importCtx.contactMechTypeId" from-field="parameters.contactMechTypeId"/>
        <set field="importCtx.infoString" from-field="parameters.infoString"/>
        <set field="importCtx.newContactMechId" from-field="parameters.newContactMechId"/>
        <set field="importCtx.facilityId" from-field="parameters.facilityId"/>
        <set field="importCtx.fromDate" from-field="parameters.fromDate"/>
        <set field="importCtx.thruDate" from-field="parameters.thruDate"/>
        <set field="importCtx.extension" from-field="parameters.extension"/>
        <set field="importCtx.comments" from-field="parameters.comments"/>
        <set field="importCtx.emailAddress" from-field="parameters.emailAddress"/>
        
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <!-- Out: contactMechId -->
        <call-service service-name="updateFacilityEmailAddress" in-map-name="importCtx">
        	<result-to-field result-name="contactMechId" field="contactMechId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="contactMechId">
        	<field-to-request field="contactMechId" request-name="contactMechId"/>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="receiveInventoryProduct" short-description="Receive Inventory In Warehouse">
    	<if-empty field="parameters.quantityAccepted">
        	<add-error><fail-property resource="DelysAdminUiLabels" property="DAQuantityAcceptedMustNotBeEmpty"/></add-error>
        </if-empty>
        <if-empty field="parameters.quantityRejected">
        	<add-error><fail-property resource="DelysAdminUiLabels" property="DAQuantityRejectedMustNotBeEmpty"/></add-error>
        </if-empty>
        <if-empty field="parameters.inventoryItemTypeId">
        	<add-error><fail-property resource="DelysAdminUiLabels" property="DAInventoryItemTypeIdMustNotBeEmpty"/></add-error>
        </if-empty>
        <if-empty field="parameters.productId">
        	<add-error><fail-property resource="DelysAdminUiLabels" property="DAProductIdMustNotBeEmpty"/></add-error>
        </if-empty>
        <if-empty field="parameters.facilityId">
        	<add-error><fail-property resource="DelysAdminUiLabels" property="DAFacilityIdMustNotBeEmpty"/></add-error>
        </if-empty>
        <check-errors/>
        
        <map-to-map map="parameters" to-map="importCtx"/>
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <!-- Out: inventoryItemId -->
        <call-service service-name="receiveInventoryProduct" in-map-name="importCtx">
        	<result-to-field result-name="inventoryItemId" field="inventoryItemId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="inventoryItemId">
        	<field-to-request field="inventoryItemId" request-name="inventoryItemId"/>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="updateInventoryItem" short-description="Update an InventoryItem">
    	<if-empty field="parameters.inventoryItemId">
        	<add-error><fail-property resource="DelysAdminUiLabels" property="DAInventoryItemIdMustNotBeEmpty"/></add-error>
        </if-empty>
        <check-errors/>
        
        <map-to-map map="parameters" to-map="importCtx"/>
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <!-- Out: oldOwnerPartyId, oldProductId, oldStatusId -->
        <call-service service-name="updateInventoryItem" in-map-name="importCtx">
        	<result-to-field result-name="oldOwnerPartyId" field="oldOwnerPartyId"/>
        	<result-to-field result-name="oldProductId" field="oldProductId"/>
        	<result-to-field result-name="oldStatusId" field="oldStatusId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="oldOwnerPartyId">
        	<field-to-request field="oldOwnerPartyId" request-name="oldOwnerPartyId"/>
        </if-not-empty>
        <if-not-empty field="oldProductId">
        	<field-to-request field="oldProductId" request-name="oldProductId"/>
        </if-not-empty>
        <if-not-empty field="oldStatusId">
        	<field-to-request field="oldStatusId" request-name="oldStatusId"/>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="createPhysicalInventoryAndVariance" short-description="Create a PhysicalInventory and an InventoryItemVariance">
    	<if-empty field="parameters.inventoryItemId">
        	<add-error><fail-property resource="DelysAdminUiLabels" property="DAInventoryItemIdMustNotBeEmpty"/></add-error>
        </if-empty>
        <check-errors/>
        
        <map-to-map map="parameters" to-map="importCtx"/>
        <set field="importCtx.quantityOnHandVar" from-field="parameters.quantityOnHandVar" type="BigDecimal"/>
        <set field="importCtx.availableToPromiseVar" from-field="parameters.availableToPromiseVar" type="BigDecimal"/>
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        <!-- Out: physicalInventoryId -->
        <call-service service-name="createPhysicalInventoryAndVariance" in-map-name="importCtx">
        	<result-to-field result-name="physicalInventoryId" field="physicalInventoryId"/>
        </call-service>
        <check-errors/>
        <if-not-empty field="physicalInventoryId">
        	<field-to-request field="physicalInventoryId" request-name="physicalInventoryId"/>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="createPartyPostalAddress" short-description="Create a PostalAddress for party">
        <if-empty field="parameters.address1">
        	<add-error>
        		<fail-property resource="DelysAdminUiLabels" property="DAAddressMustNotBeEmpty"/>
        	</add-error>
        </if-empty>
        <if>
        	<condition>
        		<and>
        			<if-empty field="parameters.countryGeoId"></if-empty>
        			<if-empty field="parameters.stateProvinceGeoId"></if-empty>
        		</and>
        	</condition>
        	<then>
        		<add-error>
	        		<fail-property resource="DelysAdminUiLabels" property="DACityMustNotBeEmpty"/>
	        	</add-error>
        	</then>
        </if>
        <check-errors/>
        
        <if-empty field="parameters.partyId">
            <set field="parameters.partyId" from-field="userLogin.partyId"/>
        </if-empty>
        
        <map-to-map map="parameters" to-map="importCtx"/>
        <entity-one value-field="userLogin" entity-name="UserLogin">
        	<field-map field-name="userLoginId" value="distributorsuper"/>
        </entity-one>
        <if-not-empty field="userLogin">
        	<set field="importCtx.userLogin" from-field="userLogin"/>
        </if-not-empty>
        
        <entity-one value-field="countryGeo" entity-name="Geo">
        	<field-map field-name="geoId" from-field="parameters.countryGeoId"/>
        </entity-one>
        <if-not-empty field="countryGeo">
        	<set field="importCtx.city" from-field="countryGeo.geoName"/>
        </if-not-empty>
        <entity-one value-field="stateProvinceGeo" entity-name="Geo">
        	<field-map field-name="geoId" from-field="parameters.stateProvinceGeoId"/>
        </entity-one>
        <if-not-empty field="stateProvinceGeo">
        	<set field="importCtx.city" from-field="stateProvinceGeo.geoName"/>
        </if-not-empty>
        <if-not-empty field="parameters.districtGeoId">
        	<set field="importCtx.countyGeoId" from-field="parameters.districtGeoId"/>
        </if-not-empty>
        
        <!-- OUT contactMechId -->
        <set-service-fields service-name="createPostalAddress" map="importCtx" to-map="createPostalAddressMap"/>
        <call-service in-map-name="createPostalAddressMap" service-name="createPostalAddress">
            <default-message resource="PartyUiLabels" property="PartyPostalAddressSuccessfullyCreated"/>
            <result-to-field result-name="contactMechId" field="newPartyContactMech.contactMechId"/>
        </call-service>
        <check-errors/>
        
        <set-service-fields service-name="createPartyContactMech" map="importCtx" to-map="createPartyContactMechMap"/>
        <set field="createPartyContactMechMap.contactMechId" from-field="newPartyContactMech.contactMechId"/>
        <set field="createPartyContactMechMap.contactMechTypeId" value="POSTAL_ADDRESS"/>
        <call-service service-name="createPartyContactMech" in-map-name="createPartyContactMechMap" break-on-error="true">
            <default-message resource="PartyUiLabels" property="PartyPostalAddressSuccessfullyCreated"/>
        </call-service>
        <field-to-request field="newPartyContactMech.contactMechId" request-name="contactMechId"/>
        <field-to-result field="newPartyContactMech.contactMechId" result-name="contactMechId"/>
    </simple-method>
    
    
</simple-methods>