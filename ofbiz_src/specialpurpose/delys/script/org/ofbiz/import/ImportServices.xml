<?xml version="1.0" encoding="UTF-8"?>
<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">
   <simple-method method-name="createQuotaHeader" short-description="create Quota">
        <make-value entity-name="QuotaHeader" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <make-next-seq-id seq-field-name="quotaId" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
        <field-to-result field="newEntity.quotaId" result-name="quotaId"/>
    </simple-method>
    <simple-method method-name="updateQuotaHeader" short-description="update Quota Header">
    	<make-value entity-name="QuotaHeader" value-field="lookupKeyValue"/>
    	<set-pk-fields map="parameters" value-field="lookupKeyValue"/>
    	<find-by-primary-key entity-name="QuotaHeader" map="lookupKeyValue" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
        <field-to-result field="lookupKeyValue.quotaId" result-name="quotaId"/>
    </simple-method>
    <simple-method method-name="createAgreementPartyCTMPurpose" short-description="create AgreementPartyCTMPurpose">
        <make-value entity-name="AgreementPartyCTMPurpose" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="updateAgreementPartyCTMPurpose" short-description="update AgreementPartyCTMPurpose">
        <entity-one entity-name="AgreementPartyCTMPurpose" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="createAgreementPartyContactMech" short-description="create AgreementPartyContactMech">
        <make-value entity-name="AgreementPartyContactMech" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="updateAgreementPartyContactMech" short-description="update AgreementPartyContactMech">
        <entity-one entity-name="AgreementPartyContactMech" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="updateUomConversionDated" short-description="update Uom Conversion Dated">
        <entity-one entity-name="UomConversionDated" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <field-to-result field="parameters.uomId" result-name="uomId"/>
        <field-to-result field="parameters.uomIdTo" result-name="uomIdTo"/>
        <field-to-result field="parameters.fromDate" result-name="fromDate"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="createUomConversionDated" short-description="create Uom Conversion Dated">
        <make-value entity-name="UomConversionDated" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <field-to-result field="newEntity.uomId" result-name="uomId"/>
        <field-to-result field="newEntity.uomIdTo" result-name="uomIdTo"/>
        <field-to-result field="newEntity.fromDate" result-name="fromDate"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="removeGeneralCapacitys" short-description="delete Uom Conversion Dated">
        <entity-one entity-name="UomConversionDated" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="removeProductConfigPacking" short-description="delete Product Config Packing">
        <entity-one entity-name="ConfigPacking" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="createReceipt" short-description="create receipt">
        <make-value entity-name="Receipt" value-field="newEntity"/>
        <set-pk-fields value-field="newEntity" map="parameters"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="receiptId">
	        <make-next-seq-id seq-field-name="receiptId" value-field="newEntity"/>
        </if-empty>
        <create-value value-field="newEntity"/>
        <field-to-result field="newEntity.receiptId" result-name="receiptId"/>
    </simple-method>
    <simple-method method-name="updateReceipt" short-description="update Receipt">
    	<make-value entity-name="Receipt" value-field="lookupKeyValue"/>
    	<set-pk-fields map="parameters" value-field="lookupKeyValue"/>
    	<find-by-primary-key entity-name="Receipt" map="lookupKeyValue" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
        <field-to-result field="lookupKeyValue.receiptId" result-name="receiptId"/>
    </simple-method>
    <simple-method method-name="removeReceipt" short-description="delete receipt">
        <entity-one entity-name="Receipt" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="cancelAgreement" short-description="Cancel an existing Agreement">
        <entity-one entity-name="Agreement" value-field="agreement" auto-field-map="true"/>
        <check-errors/>
        <now-timestamp field="nowTimestamp"/>
        <set from-field="nowTimestamp" field="agreement.thruDate"/>
        <set from-field="parameters.statusId" field="agreement.statusId"></set>
        <store-value value-field="agreement"/>
        <check-errors/>
    </simple-method>
    <simple-method method-name="updateSttPlanHeader" short-description="update stt product plan header">
        <entity-one entity-name="ProductPlanHeader" value-field="productPlanHeader" auto-field-map="true"/>
        <check-errors/>
        <set from-field="parameters.productPlanId" field="productPlanHeader.productPlanId"></set>
        <set from-field="parameters.statusId" field="productPlanHeader.statusId"></set>
        <store-value value-field="productPlanHeader"/>
        <check-errors/>
    </simple-method>
    <simple-method method-name="updateCostOrder" short-description="update CostAccounting">
        <set from-field="parameters.oneOrder" field="oneOrder"></set>
        <set from-field="parameters.perOrder" field="perOrder"></set>
        <set from-field="parameters.totalCost" field="totalCost"></set>
        <set from-field="parameters.orderId" field="orderId"></set>
        <set from-field="parameters.costAccBaseId" field="costAccBaseId"></set>
		<call-simple-method method-name="getGlArithmeticSettingsInline" xml-resource="component://accounting/script/org/ofbiz/accounting/ledger/GeneralLedgerServices.xml"/>
		<calculate field="resultTotal" type="BigDecimal"><number value="0"/></calculate>
		
        <calculate field="resultTotal" type="BigDecimal" decimal-scale="${ledgerDecimal}" rounding-mode="${roundingMode}">
        	<calcop operator="divide">
        		<calcop operator="multiply">
        			<calcop operator="get" field="oneOrder"></calcop>
        			<calcop operator="get" field="totalCost"></calcop>
        		</calcop>
        		<calcop operator="get" field="perOrder"></calcop>
        	</calcop>
        </calculate>
        <check-errors/>
        <entity-condition list="listOrderCost" entity-name="CostAccounting">
        	<condition-list>
        		<condition-expr field-name="costAccBaseId" operator="equals" from-field="costAccBaseId"/>
        		<condition-expr field-name="orderId" operator="equals" from-field="orderId"/>
        	</condition-list>
        </entity-condition>
        <check-errors/>
        <if-empty field="listOrderCost">
			<make-value value-field="costAccounting" entity-name="CostAccounting"/>
			<set field="costAccounting.orderId" from-field="orderId"/>
			<sequenced-id sequence-name="CostAccounting" field="costAccountingId"/>
			<set field="costAccounting.costAccountingId" from-field="costAccountingId"/>
			<set field="costAccounting.costAccBaseId" from-field="costAccBaseId"/>
			<set field="costAccounting.costPriceTemporary" from-field="resultTotal"></set>
			<create-value value-field="costAccounting" />
			<check-errors/>
        	<else>
        		<first-from-list entry="firstCostAcc" list="listOrderCost"/>
        		<set field="firstCostAcc.costPriceTemporary" from-field="resultTotal"/>
        		<store-value value-field="firstCostAcc"/>
        		<check-errors/>
        	</else>
        </if-empty>
    </simple-method>
    <simple-method method-name="updatePackingListHeader" short-description="update packing list header">
        <entity-one entity-name="PackingListHeader" value-field="packingListHeader" auto-field-map="true"/>
		<if-not-empty field="packingListHeader">
			<set-pk-fields value-field="packingListHeader" map="parameters"/>
			<set-nonpk-fields value-field="packingListHeader" map="parameters"/>
			<store-value value-field="packingListHeader"/>
			<field-to-result field="packingListHeader.packingListId" result-name="packingListId"/>
			<field-to-result field="packingListHeader.purchaseOrderId" result-name="purchaseOrderId"/>
			<field-to-result field="packingListHeader.containerId" result-name="containerId"/>
			<else>
				<make-value value-field="newEntity" entity-name="PackingListHeader"/>
				<set-pk-fields value-field="newEntity" map="parameters"/>
				<set-nonpk-fields value-field="newEntity" map="parameters"/>
				<sequenced-id sequence-name="PackingListHeader" field="newEntity.packingListId"/>
				<!-- <make-next-seq-id seq-field-name="packingListId" value-field="newEntity"/> -->
				<create-value value-field="newEntity"/>
				<field-to-result field="newEntity.packingListId" result-name="packingListId"/>
				<field-to-result field="newEntity.purchaseOrderId" result-name="purchaseOrderId"/>
				<field-to-result field="newEntity.containerId" result-name="containerId"/>
			</else>
		</if-not-empty>
    </simple-method>
    
    <simple-method method-name="updateContainer" short-description="update Container">
        <entity-one entity-name="Container" value-field="container" auto-field-map="true"/>
		<if-not-empty field="container">
			<set-pk-fields value-field="container" map="parameters"/>
			<set-nonpk-fields value-field="container" map="parameters"/>
			<store-value value-field="container"/>
			<field-to-result field="container.containerId" result-name="containerId"/>
			<else>
				<make-value value-field="newEntity" entity-name="Container"/>
				<set-pk-fields value-field="newEntity" map="parameters"/>
				<set-nonpk-fields value-field="newEntity" map="parameters"/>
				<sequenced-id sequence-name="Container" field="newEntity.containerId"/>
				<!-- <make-next-seq-id seq-field-name="containerId" value-field="newEntity"/> -->
				<create-value value-field="newEntity"/>
				<field-to-result field="newEntity.containerId" result-name="containerId"/>
			</else>
		</if-not-empty>
    </simple-method>
    
    <simple-method method-name="updatePackingListDetail" short-description="update Packing List Detail">
        <entity-one entity-name="PackingListDetail" value-field="packingListDetail" auto-field-map="true"/>
		<if-not-empty field="packingListDetail">
			<set-pk-fields value-field="packingListDetail" map="parameters"/>
			<set-nonpk-fields value-field="packingListDetail" map="parameters"/>
			<store-value value-field="packingListDetail"/>
			<field-to-result field="packingListDetail.packingListSeqId" result-name="packingListSeqId"/>
			<else>
				<make-value value-field="newEntity" entity-name="PackingListDetail"/>
				<set-pk-fields value-field="newEntity" map="parameters"/>
				<set-nonpk-fields value-field="newEntity" map="parameters"/>
				<!-- <sequenced-id sequence-name="PackingListDetail" field="newEntity.packingListSeqId"/> -->
				<make-next-seq-id seq-field-name="packingListSeqId"  value-field="newEntity"  />
				<create-value value-field="newEntity"/>
				<field-to-result field="newEntity.packingListSeqId" result-name="packingListSeqId"/>
			</else>
		</if-not-empty>
    </simple-method>
    <simple-method method-name="updateOrderAndContainer" short-description="update Order And Container">
        <entity-one entity-name="OrderAndContainer" value-field="orderAndContainer" auto-field-map="true"/>
		<if-not-empty field="orderAndContainer">
			<set-pk-fields value-field="orderAndContainer" map="parameters"/>
			<set-nonpk-fields value-field="orderAndContainer" map="parameters"/>
			<store-value value-field="orderAndContainer"/>
			<else>
				<make-value value-field="newEntity" entity-name="OrderAndContainer"/>
				<set-pk-fields value-field="newEntity" map="parameters"/>
				<set-nonpk-fields value-field="newEntity" map="parameters"/>
				<if-empty field="newEntity.fromDate">
					<now-timestamp field="newEntity.fromDate"/>
				</if-empty>
				<create-value value-field="newEntity"/>
				<field-to-result field="newEntity.packingListSeqId" result-name="packingListSeqId"/>
			</else>
		</if-not-empty>
    </simple-method>
    <simple-method method-name="updateStatusAgreement" short-description="update status agreement">
        <entity-one entity-name="Agreement" value-field="agreement" auto-field-map="true"/>
		<if-not-empty field="agreement">
			<set-pk-fields value-field="agreement" map="parameters"/>
			<set-nonpk-fields value-field="agreement" map="parameters"/>
			<store-value value-field="agreement"/>
		</if-not-empty>
    </simple-method>
    <simple-method method-name="updateDocumentCustoms" short-description="update document customs">
        <entity-one entity-name="DocumentCustoms" value-field="documentCustoms" auto-field-map="true"/>
		<if-not-empty field="documentCustoms">
			<set-pk-fields value-field="documentCustoms" map="parameters"/>
			<set-nonpk-fields value-field="documentCustoms" map="parameters"/>
			<store-value value-field="documentCustoms"/>
			<field-to-result field="documentCustoms.documentCustomsId" result-name="documentCustomsId"/>
			<else>
				<make-value value-field="newEntity" entity-name="DocumentCustoms"/>
				<set-pk-fields value-field="newEntity" map="parameters"/>
				<set-nonpk-fields value-field="newEntity" map="parameters"/>
				<sequenced-id sequence-name="DocumentCustoms" field="newEntity.documentCustomsId"/>
				<!-- <make-next-seq-id seq-field-name="packingListId" value-field="newEntity"/> -->
				<create-value value-field="newEntity"/>
				<field-to-result field="newEntity.documentCustomsId" result-name="documentCustomsId"/>
			</else>
		</if-not-empty>
    </simple-method>
    <simple-method method-name="createOrUpdateProductPlanItem" short-description="create new product plan item">
        <entity-one entity-name="ProductPlanItem" value-field="productPlanItem" auto-field-map="true"/>
		<if-not-empty field="productPlanItem">
			<set-pk-fields value-field="productPlanItem" map="parameters"/>
			<set-nonpk-fields value-field="productPlanItem" map="parameters"/>
			<store-value value-field="productPlanItem"/>
			<field-to-result field="productPlanItem.productPlanId" result-name="productPlanId"/>
			<field-to-result field="productPlanItem.productPlanItemSeqId" result-name="productPlanItemSeqId"/>
			<else>
				<make-value value-field="newEntity" entity-name="ProductPlanItem"/>
				<set-pk-fields value-field="newEntity" map="parameters"/>
				<set-nonpk-fields value-field="newEntity" map="parameters"/>
				<!-- <sequenced-id sequence-name="ProductPlanItem" field="newEntity.documentCustomsId"/> -->
				<make-next-seq-id seq-field-name="productPlanItemSeqId" value-field="newEntity"/>
				<create-value value-field="newEntity"/>
				<field-to-result field="newEntity.productPlanId" result-name="productPlanId"/>
				<field-to-result field="newEntity.productPlanItemSeqId" result-name="productPlanItemSeqId"/>
			</else>
		</if-not-empty>
    </simple-method>
    <simple-method method-name="updateBillOfLadingSimple" short-description="update bill of lading">
        <entity-one entity-name="BillOfLading" value-field="billOfLading" auto-field-map="true"/>
		<if-not-empty field="billOfLading">
			<set-pk-fields value-field="billOfLading" map="parameters"/>
			<set-nonpk-fields value-field="billOfLading" map="parameters"/>
			<store-value value-field="billOfLading"/>
			<field-to-result field="billOfLading.billId" result-name="billId"/>
			<else>
				<make-value value-field="newEntity" entity-name="BillOfLading"/>
				<set-pk-fields value-field="newEntity" map="parameters"/>
				<set-nonpk-fields value-field="newEntity" map="parameters"/>
				<sequenced-id sequence-name="BillOfLading" field="newEntity.billId"/>
				<create-value value-field="newEntity"/>
				<field-to-result field="newEntity.billId" result-name="billId"/>
			</else>
		</if-not-empty>
    </simple-method>
</simple-methods>