<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
	license agreements. See the NOTICE file distributed with this work for additional 
	information regarding copyright ownership. The ASF licenses this file to 
	you under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">
	<simple-method method-name="getProjectTaskList"
		short-description="get Project Phase/task information" login-required="true">
		<if-empty field="parameters.projectId">
			<return />
		</if-empty>
		<entity-and entity-name="ProjectAndPhaseAndTask" list="tasks">
			<field-map field-name="projectId" from-field="parameters.projectId" />
			<order-by field-name="phaseSeqNum" />
			<order-by field-name="phaseName" />
			<order-by field-name="sequenceNum" />
			<order-by field-name="workEffortName" />
		</entity-and>
		<if-not-empty field="tasks">
			<iterate entry="lowInfo" list="tasks">
				<set field="highInfo.phaseName" from-field="lowInfo.phaseName" />
				<set field="highInfo.phaseSeqNum" from-field="lowInfo.phaseSeqNum" />
				<set field="highInfo.taskId" from-field="lowInfo.workEffortId" />
				<call-simple-method method-name="combineInfo" />
				<clear-field field="highInfo.sequenceId" />
				<call-simple-method method-name="createDates" />
				<set field="highInfo.workEffortId" from-field="lowInfo.workEffortId" />
				<set field="highInfo.workEffortName" from-field="lowInfo.workEffortName" />
				<set field="highInfo.sequenceNum" from-field="lowInfo.sequenceNum" />
				<field-to-list field="highInfo" list="taskList" />
				<clear-field field="highInfo" />
			</iterate>
		</if-not-empty>
		<!-- results -->
		<field-to-result field="taskList" />
		<field-to-result field="parameters.projectId"
			result-name="projectId" />
	</simple-method>

	<simple-method method-name="getProjectTask"
		short-description="get Project task information" login-required="true">
		<log message="test parameters.taskId: ${parameters.taskId}" level="info"/>
		<entity-one entity-name="WorkEffort" value-field="lowInfo">
			<field-map field-name="workEffortId" from-field="parameters.taskId" />
		</entity-one>
		<set field="highInfo.taskId" from-field="lowInfo.workEffortId" />
		<set field="highInfo.taskSeqNum" from-field="lowInfo.sequenceNum" />
		<set field="highInfo.taskName" from-field="lowInfo.workEffortName" />
		<set field="highInfo.taskDescription" from-field="lowInfo.description" />
		<set field="highInfo.scopeEnumId" from-field="lowInfo.scopeEnumId" />
		<set field="highInfo.workEffortParentId" from-field="lowInfo.workEffortParentId" />
		<call-simple-method method-name="combineInfo" />
		<field-to-result field="highInfo" result-name="taskInfo" />
	</simple-method>
	<simple-method method-name="combineInfo" short-description="combine lower level status, dates of tasks.">
        <call-simple-method method-name="combineStatusInfo"/>
        <call-simple-method method-name="combineDatesAndPlannedHoursInfo"/>
        <call-simple-method method-name="combineActualHours"/>
    </simple-method>
    
    <simple-method method-name="combineStatusInfo" short-description="combine lower level status">
        <!-- the status for a project or phase is
         IN_PROGRESS if at least one task still in progress
         COMPLETED if all task are either completed or cancelled
         CREATED if other conditions does not apply
         For a task the status is
         IN_PROGRESS if it has at least one resource and at least a time entry
         ASSIGNED if it has at least one resource but no time entry associated
         -->
        <!-- if lowlevel type equals TASK then get create the status first -->
        <if-compare field="lowInfo.workEffortTypeId" value="TASK" operator="equals">
            <set field="highInfo.currentStatusId" from-field="lowInfo.currentStatusId"/>
            <if-compare field="lowInfo.currentStatusId" value="PTS_CREATED" operator="equals">
                <get-related value-field="lowInfo" relation-name="WorkEffortPartyAssignment" list="assignsAll"/>
                <filter-list-by-date list="assignsAll" to-list="assigns"/>
                <if-not-empty field="assigns">
                    <set field="highInfo.currentStatusId" value="PTS_CREATED_AS"/><!-- task is ASSIGNED -->
                </if-not-empty>
                <get-related value-field="lowInfo" relation-name="TimeEntry" list="entries"/>
                <if-not-empty field="entries">
                    <set field="highInfo.currentStatusId" value="PTS_CREATED_IP"/><!-- task is IN_PROGRESS -->
                </if-not-empty>
            </if-compare>
            <return/>
        </if-compare>
        <entity-count count-field="tasksCount" entity-name="ProjectPhaseTaskAssignmentView">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
            </condition-list>
        </entity-count>
        <log level="info" message="related tasks count ====> ${tasksCount}"/>
        <entity-count count-field="completedTasks" entity-name="ProjectPhaseTaskAssignmentView">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
            </condition-list>
            <having-condition-list combine="or">
            <condition-expr field-name="taskStatusId" operator="equals" value="PTS_COMPLETED"/>
            <condition-expr field-name="taskStatusId" operator="equals" value="PTS_CANCELLED"/>
        </having-condition-list>
        </entity-count>
        <log level="info" message="related completed tasks count ====> ${completedTasks}"/>
        <entity-count count-field="assignedTasks" entity-name="ProjectPhaseTaskAssignmentView">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
            </condition-list>
            <having-condition-list combine="and">
            <condition-expr field-name="entriesCount" value="0"/>
            <condition-expr field-name="resourceCount" operator="greater-equals" value="1"/>
            <condition-expr field-name="taskStatusId" operator="not-equals" value="PTS_COMPLETED"/>
            <condition-expr field-name="taskStatusId" operator="not-equals" value="PTS_CANCELLED"/>
        </having-condition-list>
        </entity-count>
        <log level="info" message="related assigned tasks count ====> ${assignedTasks}"/>
        <entity-count count-field="inprogressTasks" entity-name="ProjectPhaseTaskAssignmentView">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
            </condition-list>
            <having-condition-list combine="and">
                <condition-expr field-name="entriesCount" operator="greater-equals" value="1"/>
                <condition-expr field-name="resourceCount" operator="greater-equals" value="1"/>
                <condition-expr field-name="taskStatusId" operator="not-equals" value="PTS_COMPLETED"/>
                <condition-expr field-name="taskStatusId" operator="not-equals" value="PTS_CANCELLED"/>
            </having-condition-list>
        </entity-count>
        <log level="info" message="related in progress tasks count ====> ${inprogressTasks}"/>
        <if>
            <condition>
                <or>
                    <if-compare operator="greater" field="inprogressTasks" type="Long" value="0"/>
                    <if-compare operator="greater" field="assignedTasks" type="Long" value="0"/>
                </or>
            </condition>
            <then>
                <set field="highInfo.currentStatusId" value="PTS_CREATED_IP"/>
            </then>
            <else>
                <if>
                    <condition>
                        <if-compare-field operator="equals" field="completedTasks" to-field="tasksCount"/>
                    </condition>
                    <then>
                        <set field="highInfo.currentStatusId" value="PTS_COMPLETED"/>
                    </then>
                    <else>
                        <set field="highInfo.currentStatusId" value="PTS_CREATED"/>
                    </else>
                </if>
            </else>
        </if>
    </simple-method>
    <simple-method method-name="combineDatesAndPlannedHoursInfo" short-description="combine lower level start end dates and planned hours for a project, phase or task">
        <entity-condition  entity-name="ProjectPhaseTaskSklSumView" list="summaryInfos">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
            </condition-list>
            <select-field field-name="projectId"/>
            <select-field field-name="estimatedStartDate"/>
            <select-field field-name="actualStartDate"/>
            <select-field field-name="estimatedCompletionDate"/>
            <select-field field-name="actualCompletionDate"/>
            <select-field field-name="plannedHours"/>
            <select-field field-name="priority"/>
        </entity-condition>

        <!-- Now used TimeEntries to update (or not) actual start and end Date -->
        <first-from-list entry="summaryInfo" list="summaryInfos"/>
        <set field="highInfo.estimatedStartDate" from-field="summaryInfo.estimatedStartDate"/>
        <set field="highInfo.estimatedCompletionDate" from-field="summaryInfo.estimatedCompletionDate"/>
        <set field="highInfo.actualStartDate" from-field="summaryInfo.actualStartDate"/>
        <set field="highInfo.actualCompletionDate" from-field="summaryInfo.actualCompletionDate"/>
        <set field="highInfo.priority" from-field="summaryInfo.priority"/>
        <set field="highInfo.plannedHours" from-field="summaryInfo.plannedHours"/>
        <!-- <log level="info" message="projectId=${highInfo.projectId} phaseId=${highInfo.phaseId} taskId=${highInfo.taskId} highInfo.plannedHours=${highInfo.plannedHours}"/>-->
        <!-- update actual start date by the min date form sub tasks associated TimeEntries 
        (if before actualStartDate field) -->
        <entity-condition  entity-name="ProjectPhaseTaskActualEntrySumView" list="summaryEntriesInfos">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
            </condition-list>
            <select-field field-name="actualEntryStartDate"/>
        </entity-condition>
        <first-from-list entry="timeEntriesInfo" list="summaryEntriesInfos"/>
        <if-not-empty field="timeEntriesInfo">
          <if-not-empty field="timeEntriesInfo.actualEntryStartDate">
            <if>
                <condition>
                    <or>
                        <if-empty field="highInfo.actualStartDate"/>
                        <if-compare-field field="highInfo.actualStartDate" operator="greater" type="Timestamp" to-field="timeEntriesInfo.actualEntryStartDate"/>
                    </or>
                </condition>
                <then>
                    <set field="highInfo.actualStartDate" from-field="timeEntriesInfo.actualEntryStartDate"/>
                </then>
            </if>
          </if-not-empty>
        </if-not-empty>
    </simple-method>
    <simple-method method-name="combineActualHours" short-description="combine lower level Actual hours info.">
        <!-- 
        -to calculate actual hours : the declared number of hours in time entry should be multiplied by the 
         max percentage declared in PartyRate if a valid party rate can be found for the party associated to a
         the timesheet associated to this time entry and has the same rateType as this timeEntry 
        -actualHoursOriginal is the total of hours in time entries without application of percentage declared in partyRate
         -->
        <clear-field field="originalHours"/>
        <clear-field field="actualHours"/>
        <clear-field field="originalActualHours"/>

        <!-- I- get timeEntries for which there is no rate  (originalHours)-->
        <entity-condition list="notRatedValues" entity-name="ProjectPhaseTaskActualNotRatedHoursView">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
                <condition-expr field-name="hoursPartyId" from-field="parameters.hoursPartyId" ignore-if-empty="true"/>
            </condition-list>
            <select-field field-name="totalOriginalHours"/>
        </entity-condition>
        <first-from-list entry="notRatedValue" list="notRatedValues"/>
        <set field="originalHours" from-field="notRatedValue.totalOriginalHours" type="Double"/>

        <!-- II- get total for timeEntries having a partyRate that should be applied
        before applying rate (totalOriginalHours)
        after applying rate (totalRatedHours)-->
        <entity-condition list="ratedValues" entity-name="ProjectPhaseTaskActualRatedHoursView">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
                <condition-expr field-name="hoursPartyId" from-field="parameters.hoursPartyId" ignore-if-empty="true"/>
            </condition-list>
            <select-field field-name="totalOriginalHours"/>
            <select-field field-name="totalRatedHours"/>
        </entity-condition>
        <first-from-list list="ratedValues" entry="ratedValue"/>
        <!-- not used ratedValue.totalRatedHours  because not works, reason seem to be totalRatedHours is a calculated field ??? -->
        <call-object-method method-name="getDouble" obj-field="ratedValue" ret-field="actualHours">
            <string value="totalRatedHours"/>
        </call-object-method>

        <if-empty field="actualHours">
            <set field="actualHours" from-field="originalHours"/>
            <else>
                <calculate field="actualHours" type="Double">
                    <calcop operator="add" field="originalHours">
                        <calcop operator="get" field="actualHours"/>
                    </calcop>
                </calculate>
            </else>
        </if-empty>

        <if-empty field="originalHours">
            <set field="originalActualHours" from-field="ratedValue.totalOriginalHours" type="Double"/>
            <else>
                <calculate field="originalActualHours" type="Double">
                    <calcop operator="add" field="originalHours">
                        <calcop operator="get" field="ratedValue.totalOriginalHours"/>
                    </calcop>
                </calculate>
            </else>
        </if-empty>

        <set field="highInfo.originalActualHours" from-field="originalActualHours"/>
        <set field="highInfo.actualHours" from-field="actualHours"/>
        <!-- do the same but for non-billed hours -->
        <!-- first get not rated hours -->
        <entity-condition list="notRatedValues" entity-name="ProjectPhaseTaskActualNotRatedHoursView">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
                <condition-expr field-name="hoursPartyId" from-field="parameters.hoursPartyId" ignore-if-empty="true"/>
                <condition-expr field-name="invoiceId" from-field="nullField"/>
            </condition-list>
            <select-field field-name="totalOriginalHours"/>
        </entity-condition>
        <first-from-list entry="notRatedValue" list="notRatedValues"/>
        <set field="actualNonBilledHours" from-field="notRatedValue.totalOriginalHours" type="Double"/>
        <!-- second get non billed for entries having an invoiceId -->
        <entity-condition list="ratedValues" entity-name="ProjectPhaseTaskActualRatedHoursView">
            <condition-list>
                <condition-expr field-name="projectId" from-field="highInfo.projectId" ignore-if-empty="true"/>
                <condition-expr field-name="phaseId" from-field="highInfo.phaseId" ignore-if-empty="true"/>
                <condition-expr field-name="taskId" from-field="highInfo.taskId" ignore-if-empty="true"/>
                <condition-expr field-name="hoursPartyId" from-field="parameters.hoursPartyId" ignore-if-empty="true"/>
                <condition-expr field-name="invoiceId" from-field="nullField"/>
            </condition-list>
            <select-field field-name="totalOriginalHours"/>
            <select-field field-name="totalRatedHours"/>
        </entity-condition>
        <first-from-list list="ratedValues" entry="ratedValue"/>
        <call-object-method method-name="getDouble" obj-field="ratedValue" ret-field="actualHours">
            <string value="totalOriginalHours"/>
        </call-object-method>

        <if-not-empty field="actualNonBilledHours">
            <calculate field="actualNonBilledHours" type="Double">
                <calcop operator="get" field="actualNonBilledHours">
                    <calcop operator="add" field="actualHours"/>
                </calcop>
            </calculate>
            <else>
                <set field="actualNonBilledHours" from-field="totalOriginalHours" type="Double"/>
            </else>
        </if-not-empty>
        <set field="highInfo.actualNonBilledHours" from-field="actualNonBilledHours" type="Double"/>
    </simple-method>
</simple-methods>    